name: Build and Release

on:
  workflow_dispatch:         # Manual trigger via UI
  push:
    tags:
      - 'v*.*.*'             # Trigger on version tags

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # Required for full tag history

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release

      - name: Test
        run: cargo test --release

      - name: Prepare publish folder
        run: |
          mkdir publish
          cp target/release/rust-macro.exe publish/
          xcopy lib publish/lib /E /I /Y

      - name: Zip published output
        run: |
          powershell Compress-Archive -Path "publish/*" -DestinationPath "release.zip"

      - name: Get latest tag and generate next version
        id: get_version
        shell: pwsh
        run: |
          git fetch --tags
          $latestTag = git describe --tags --abbrev=0 --match "v*" 2>$null
          if (-not $latestTag) {
            $latestTag = "v1.0.0"
          }
          Write-Host "Latest tag: $latestTag"

          $parts = $latestTag.TrimStart("v").Split(".")
          $major = [int]$parts[0]
          $minor = [int]$parts[1]
          $patch = [int]$parts[2] + 1
          $newTag = "v$major.$minor.$patch"

          echo "new_tag=$newTag" >> $env:GITHUB_OUTPUT
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $newTag
          git push origin $newTag

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.new_tag }}
          name: Release ${{ env.new_tag }}
          files: release.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Configure Git for push
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}
